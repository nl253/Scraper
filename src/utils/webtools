#!/usr/bin/env python
# -*- coding: utf-8 -*-

import re
from re import compile
from urllib.request import urlopen
import logging

logging.basicConfig(
    level=logging.INFO,
    format='%(levelname)s : %(asctime)s : %(lineno)s : %(message)s.',
    datefmt="%I:%M:%S")

l = logging.getLogger()

regex = compile(
    r'^(?:http|ftp)s?://'  # http:// or https://
    # domain...
    r'(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\.)+(?:[A-Z]{2,6}\.?|[A-Z0-9-]{2,}\.?)|'
    r'localhost|'  # localhost...
    r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})'  # ...or ip
    r'(?::\d+)?'  # optional port
    r'(?:/?|[/?]\S+)$', re.IGNORECASE)

def validate_url(URL: str) -> bool:
    l.info('Filtering links that end with ".zip" or ".rar"')
    l.info('Filtering links through Django regex')
    if regex.search(URL) and not compile('(\.((zip)|(rar)|(pdf)|(docx)))$').search(URL):
        return True
    return False

def request_html(URL: str) -> str:
    return urlopen(URL, timeout=8).read().decode('utf-8')

